{
    "contents" : "GetCorrectionFactor <- function(sample, span, gc_percentages, median_autosomals){\n  fit.loess <-loess(sample ~ gc_percentages, span = span)\n  fitted_values <- cbind(fit.loess$x, median_autosomals /  fit.loess$fitted)\n  return(list(median_autosomals / fit.loess$fitted, fitted_values))\n}\ncorrect.reads <- function(sample, correction.factor, indices){\n  sample[indices] <- sample[indices] * correction.factor\n  return(sample)\n}\ncorrect_reads_sex_chromosome <- function(bins, gc_percentages,fitted_values){\n  for (chromosome in 1:nrow(bins))\n  {\n    gc_bins <- unname(which(gc_percentages[22+chromosome,] > 0))\n    for (bin in gc_bins){\n      bins[chromosome, bin] <- bins[chromosome, bin] * (fitted_values[order(abs(gc_percentages[(22+chromosome),bin] - fitted_values[,1]))[1],][2])\n    }\n  }\n  return(bins)\n}\n\ngc_correct_NIPTSample_loess <- function(nipt_object, span = 0.75, include_XY = include_XY, ref_genome){\n  corrected_sample <- correct_sample_loess(nipt_object, span = 0.75, include_XY = include_XY, \n                                           ref_genome = ref_genome)\n}\ngc_correct_NIPTControlGroup_loess <- function(nipt_object, span = 0.75, include_XY = include_XY, ref_genome){\n  as_control_group(nipt_samples = lapply(nipt_object[[samples]], correct_sample_loess, include_XY = include_XY,\n                                         ref_genome = ref_genome))\n}\n\ncorrect_sample_loess <- function(nipt_sample, span = 0.75, include_XY = include_XY, ref_genome){\n \n  sample <- Reduce(\"+\", nipt_sample[[autosomal_chromosome_reads]])\n  rownames(sample) <- autosomal_chromosomes\n  if (ref_genome == \"hg37\"){\n    gc_percentages <- gc_percentages_hg37\n  }\n  if (ref_genome == \"hg38\"){\n    gc_percentages <- gc_percentages_hg38\n  }\n  gc_percentages_autosomal <- gc_percentages[autosomal_chromosomes, ]\n  indices_autosomals <- (which(gc_percentages_autosomal > 0 & sample))\n  median_autosomals <- median(sample[indices_autosomals])\n  correction_factor_values <- GetCorrectionFactor(sample = as.vector(sample[indices_autosomals]), span = span, \n                                                  gc_percentages = as.vector(gc_percentages_autosomal[indices_autosomals]), \n                                                  median_autosomals = median_autosomals)\n  correction.factor <- correction_factor_values[[1]]\n  fitted_values <- correction_factor_values[[2]]\n  corrected_autosomal <- lapply(nipt_sample[[autosomal_chromosome_reads]],  correct.reads, correction.factor = correction.factor, \n                                indices = indices_autosomals)\n  if (include_XY == T){\n    corrected_sex <- lapply(X = nipt_sample[[sex_chromosome_reads]], FUN = correct_reads_sex_chromosome, \n                            gc_percentages = gc_percentages_complete, fitted_values = fitted_values)\n    corrected.sample <- construct_sample(autosomal_reads = corrected_autosomal, sex_reads = corrected_sex, \n                                         name = nipt_sample[[sample_name]], correction_status_autosomal = c(nipt_sample[[correction_status_autosomal_chromosomes]], GCcorrected),\n                                         correction_status_sex = c(nipt_sample[[correction_status_sex_chromosomes]], GCcorrected))\n  }\n  else{\n  corrected.sample <- construct_sample(autosomal_reads = corrected_autosomal, sex_reads = nipt_sample[[sex_chromosome_reads]], \n                                       name = nipt_sample[[sample_name]], correction_status_autosomal = c(nipt_sample[[correction_status_autosomal_chromosomes]], GCcorrected),\n                                       correction_status_sex = c(nipt_sample[[correction_status_sex_chromosomes]]))\n  }\n  return(corrected.sample)\n}\n",
    "created" : 1446216681630.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "866176533",
    "id" : "6C8472CC",
    "lastKnownWriteTime" : 1446223796,
    "path" : "~/NIPTeR/NIPTeR/R/gc_correct_beta.R",
    "project_path" : "R/gc_correct_beta.R",
    "properties" : {
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "type" : "r_source"
}